public class Solution {
    public void Rotate(int[] nums, int k) {
          if (nums.Length == 1)
                return;
            if (nums.Length == k)
                return;

            int temp =0;
            if (nums.Length < k)
            {
                while (k > 0)
                {
                    temp = nums[nums.Length - 1];
                    for (int i = nums.Length-1; i>0;i--)
                    {
                        nums[i] = nums[i - 1];
                    }
                    nums[0] = temp;
                    k--;
                }
            }
            else
            {
                int[] ans = new int[nums.Length];
                int partition = nums.Length - k;
                int otherPartOffset = (nums.Length - partition);
                for (int i = partition; i < nums.Length; i++)
                {
                    ans[i - partition] = nums[i];
                }
                for (int i = 0; i < partition; i++)
                {
                    ans[i + otherPartOffset] = nums[i];
                }
                for (int i = 0; i < nums.Length; i++)
                {
                    nums[i] = ans[i];
                }
            }
    }
}
