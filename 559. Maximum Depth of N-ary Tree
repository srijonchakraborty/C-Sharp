/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    int maxDepth =0;
    public int MaxDepth(Node root)
    {
        if (root == null) return 0;
        if (root != null)
            DFSDepth(root, 0);
        return maxDepth;
    }
    void DFSDepth(Node root,int prev)
    {
        if (root == null) return;

        if (maxDepth < (prev + 1))
        {
            maxDepth++;
        }
        if(root.children!=null && root.children.Count > 0)
        {
            foreach(var itm in root.children)
            {
                DFSDepth(itm, prev + 1);
            }
        }
    }
}
