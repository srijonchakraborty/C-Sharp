/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode DeleteMiddle(ListNode head) {
            if (head == null) return null;//for No item
            if (head.next == null) return null;// for 1 Item
            if (head.next.next == null)// for 2 Item
            {
                head.next = null;
                return head;
            }

            ListNode current = head;
            int listLen = 0;
            while (current != null)
            {
                listLen++;
                current = current.next;
            }
            int middle = listLen / 2;

            listLen = 0;
            ListNode prev = null;
            current = head;
            while (current != null)
            {
                if (listLen == middle)
                {
                    if (prev == null)
                    {
                        head = head.next;
                    }
                    else
                    {
                        prev.next = current.next;
                    }
                    break;
                }
                prev = current;
                current = current.next;
                listLen++;
            }
            return head; 
    }
}
