//2. Add Two Numbers

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        int overflow = 0;
            ListNode finalAns = new ListNode(0);
            ListNode l1Current = l1;
            ListNode l2Current = l2;
            ListNode curr = finalAns;
            
            while (l1Current != null || l2Current != null)
            {
                int valueOne = l1Current?.val ?? 0;
                int valueTwo = l2Current?.val ?? 0;
              
                int res = valueOne + valueTwo + overflow;
                overflow = res / 10;
                if (res < 10)
                {
                    curr.val = res;
                    if (l1Current?.next != null || l2Current?.next != null)
                        curr.next = new ListNode(0);
                }
                else if (res == 10)
                {
                    curr.val = 0;
                    curr.next = new ListNode(1);
                }
                else
                {
                    curr.val = res % 10;
                    curr.next = new ListNode(1);
                }
                curr = curr.next;
                l1Current = l1Current?.next;
                l2Current = l2Current?.next;
            }
            
            return finalAns;
    }
}
