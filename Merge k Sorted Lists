/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode MergeKLists(ListNode[] lists) {
            ListNode final = null;
            ListNode finalcurrent = null;
            List<int> temp = new List<int>();
           
            if (lists ==null || (lists?.Count() ?? 0) == 0)
            {
                return null;
            }
            
            for(int i = 0; i < lists.Length; i++)
            {
                ListNode current = lists[i];
                while (current != null)
                {
                    temp.Add(current.val);
                    current = current.next;
                }
            }
            temp.Sort();
            for(int i = 0; i < temp.Count; i++)
            {
                if (i == 0)
                {
                    final = new ListNode(temp[i]);
                    finalcurrent = final;
                }
                else
                {
                    finalcurrent.next = new ListNode(temp[i]);
                    finalcurrent = finalcurrent.next;
                }
            }
            return final;
    }
}
