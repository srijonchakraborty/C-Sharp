/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode RemoveNthFromEnd(ListNode head, int n) {
            if (head == null) return null;//for No item
            if (head.next == null) return null;// for 1 Item

            ListNode current = head;
            ListNode prev = null;
            int listLen = 0;
            while (current != null)
            {
                listLen++;
                current = current.next;
            }

            int counter = 0;
            prev = null;
            current = head;
            int endLimit = listLen - n + 1;
            while (current != null)
            {
                counter++;
                if (counter == endLimit)
                {
                    if (prev == null)
                    {
                        head = head.next;
                    }
                    else
                    {
                        prev.next = current.next;
                    }
                    break;
                }
                prev = current;
                current = current.next;
            }
            return head;
    }
}
