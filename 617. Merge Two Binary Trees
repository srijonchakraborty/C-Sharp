/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public TreeNode MergeTrees(TreeNode root1, TreeNode root2)
    {
        if (root1 == null) return root2;
        if (root2 == null) return root1;
        DFSWithMerge(root1, root2);
        return root1;
    }
    public void DFSWithMerge(TreeNode root1, TreeNode root2)
    {
			if (root1 == null && root2 == null) return;

			if (root1 != null && root2 != null)
			{
				root1.val += root2.val;
			}

			if (root1?.left != null && root2?.left != null)
			{
				DFSWithMerge(root1.left, root2.left);
			}
			else if (root1?.left == null && root2?.left != null)
			{
				root1.left = root2.left;
			}

			if (root1?.right != null && root2?.right != null)
			{
				DFSWithMerge(root1.right, root2.right);
			}
			else if (root1?.right == null && root2?.right != null)
			{
				root1.right = root2.right;
			}
    }
}
