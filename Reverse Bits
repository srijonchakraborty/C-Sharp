public class Solution {
    public uint reverseBits(uint n) {
            uint final = 0;
            var binaryLen =Convert.ToString(n,2).ToList();
            int[] tempArray = new int[32];
            int count = binaryLen.Count;

            //inserting Remaining Zeros
            while (count < 32)
            {
                binaryLen.Insert(0, '0');
                count++;
            }
            // 1*(2^2) + 0*(2^1) + 1*(2^0) = 5 (Logic)
            for (int i = binaryLen.Count - 1; i >= 0; i--)
            {
                if (binaryLen[i] == '1')
                {
                    final = final + (uint)(1 * Math.Pow(2, i));
                }
                else
                {
                    final = final + (uint)(0 * Math.Pow(2, i));
                }
            }

            return final;
    }
}
