/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
        List<int> temp = new List<int>();
		public IList<int> Postorder(Node root)
		{
			if (root == null) return temp;
			NArraryDFS(root);
			return temp;
		}
		private void NArraryDFS(Node root)
        {
			if (root == null) return;
            if(root.children!=null && root.children.Count > 0)
            {
				foreach (var itm in root.children)
					NArraryDFS(itm);
			}
            temp.Add(root.val);
		}
}
